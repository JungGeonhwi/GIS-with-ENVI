무감독분류 ROI. py (무감독분류 프로세스-> 분류 결과 픽셀 전부다 ROI)

from idlpy import IDL as IDL
from glob import glob

from envipyengine import Engine
envi_engine = Engine('ENVI')

e = IDL.ENVI(Headless = 1)

root_dir = "G:\\idl_python_test\\"
out_dir = root_dir + "IDLtest\\"

class autoroi():
    def __init__(self, input_dir, output_dir):
        self.input_dir = root_dir
        self.output_dir = out_dir
        
    def main(self):
        for source in glob(self.input_dir + "*.tif"):
            sitenumber = source[-4:-5]
            site = self.do_import(source)
            Isodata = self.do_Isodata(site)
            Classtoroi = self.do_classtopixelROI(Isodata, sitenumber)
            
    def do_import(self, data):
        raster_1 = e.OpenRaster(data)
        site = raster_1
        return site
    
    def do_Isodata(self, data):
        task_iso = IDL.ENVITask('ISODATAClassification')
        task_iso.input_raster = data
        task_iso.number_of_classes = 4
        task_iso.iterations = 4
        task_iso.output_raster_uri = "G:\idl_python_test\IDLtest\isodata result.dat"
        task_iso.Execute()
        Isodata = task_iso.output_raster
        return Isodata
    
    def do_classtopixelROI(self, data, sitenumber):
        task_class = IDL.ENVITask('ClassificationToPixelROI')
        task_class.input_raster = data
        task_class.output_roi_uri = self.output_dir + sitenumber + 'ro'
        task_class.Execute()
        return True

LiDAR ROI. py (분류 작업 끝난 후부터 프로세스)
# -*- coding: utf-8 -*-
"""
site1 포인트 추출
Created on Tue Mar 23 16:38:42 2021

@author: GeonhwiJung
"""

import arcpy
from arcpy import env
from arcpy.sa import *
from idlpy import IDL
from glob import glob
env.workspace = "G:\IDL_ROI_lidar"

from envipyengine import Engine
envi_engine = Engine('ENVI')

e = IDL.ENVI(Headless = 1)

root_dir = "G:\\IDL_ROI_lidar\\"
out_dir = root_dir + "Site1\\ROI\\"

class autoroi():
    def __init__(self, input_dir, output_dir):
        self.input_dir = root_dir
        self.output_dir = out_dir
        
    def main(self):
        for source in glob(self.input_dir + "Site1.dat"):
            ConvertShp = self.do_convertShp(source)
            Randompoint = self.do_CRP(ConvertShp)
            valuepoint = self.do_valuetopoi(Randompoint)

    def do_convertShp(self, data):
        inRaster = data
        outPolygons = r"G:\IDL_ROI_lidar\Site1\ROI\Site1.shp"
        simplify = "NO_SIMPLIFY"
        field = "Value"
        Multipart = "MULTIPLE_OUTER_PART"
        ConvertShp = arcpy.conversion.RasterToPolygon(inRaster, outPolygons, simplify, field, Multipart, None)
        return ConvertShp
    
    def do_CRP(self, data):
        with arcpy.EnvManager(scratchWorkspace=r"G:\IDL_ROI_lidar\Site1\ROI", outputZFlag="Disabled", outputMFlag="Disabled", workspace=r"G:\IDL_ROI_lidar\Site1\ROI"):
            out_path = r"G:\IDL_ROI_lidar\Site1\ROI"
            out_name = "Randompoints.shp"
            conFC = data
            fcextent = "0 0 250 250"
            numPoints = 100
            mad = "1 meters"
            multi = "POINT"
            mp = ""
            Randompoint = arcpy.management.CreateRandomPoints(out_path, out_name, conFC, fcextent, numPoints, mad, multi, mp)
            return Randompoint
        
    def do_valuetopoi(self, data):
        inpoint = data
        inraster = r"G:\IDL_ROI_lidar\Andong.dat"
        outpoint = r"G:\IDL_ROI_lidar\Site1\ROI\valuepoint.shp"
        interpolate = None
        attribute = None
        valuepoint = ExtractValuesToPoints(inpoint, inraster, outpoint, interpolate, attribute)
        return valuepoint
    
ROI = autoroi(root_dir, out_dir)
ROI.main()

e = IDL.ENVI()

data = r'G:\IDL_ROI_lidar\Site1\ROI\valuepoint.shp'
Vector = e.OpenVector(data)
task_vtoroi = IDL.ENVITask('VectorAttributeToROIs')
task_vtoroi.attribute_name = 'RASTERVALU'
task_vtoroi.input_vector = Vector
task_vtoroi.output_roi_uri = "G:\IDL_ROI_lidar\Site1\ROI\Site1_ROI.xml"
task_vtoroi.Execute()


Field ROI .py
# -*- coding: utf-8 -*-
"""
site1 포인트 추출
Created on Tue Mar 23 16:38:42 2021

@author: GeonhwiJung
"""

import arcpy
from arcpy import env
from arcpy.sa import *
from idlpy import IDL
from glob import glob
env.workspace = "G:\IDL_ROI_Field"

from envipyengine import Engine
envi_engine = Engine('ENVI')

e = IDL.ENVI(Headless = 1)

root_dir = "G:\\IDL_ROI_Field\\"
out_dir = root_dir + "Site1\\ROI\\"

class autoroi():
    def __init__(self, input_dir, output_dir):
        self.input_dir = root_dir
        self.output_dir = out_dir
        
    def main(self):
        for source in glob(self.input_dir + "Site1.dat"):
            ConvertShp = self.do_convertShp(source)
            Randompoint = self.do_CRP(ConvertShp)
            valuepoint = self.do_valuetopoi(Randompoint)

    def do_convertShp(self, data):
        inRaster = data
        outPolygons = r"G:\IDL_ROI_Field\Site1\ROI\Site1.shp"
        simplify = "NO_SIMPLIFY"
        field = "Value"
        Multipart = "MULTIPLE_OUTER_PART"
        ConvertShp = arcpy.conversion.RasterToPolygon(inRaster, outPolygons, simplify, field, Multipart, None)
        return ConvertShp
    
    def do_CRP(self, data):
        with arcpy.EnvManager(scratchWorkspace=r"G:\IDL_ROI_Field\Site1\ROI", outputZFlag="Disabled", outputMFlag="Disabled", workspace=r"G:\IDL_ROI_Field\Site1\ROI"):
            out_path = r"G:\IDL_ROI_Field\Site1\ROI"
            out_name = "Randompoints.shp"
            conFC = data
            fcextent = "0 0 250 250"
            numPoints = 100
            mad = "1 meters"
            multi = "POINT"
            mp = ""
            Randompoint = arcpy.management.CreateRandomPoints(out_path, out_name, conFC, fcextent, numPoints, mad, multi, mp)
            return Randompoint
        
    def do_valuetopoi(self, data):
        inpoint = data
        inraster = r"G:\IDL_ROI_Field\Andong.dat"
        outpoint = r"G:\IDL_ROI_Field\Site1\ROI\valuepoint.shp"
        interpolate = None
        attribute = None
        valuepoint = ExtractValuesToPoints(inpoint, inraster, outpoint, interpolate, attribute)
        return valuepoint
    
ROI = autoroi(root_dir, out_dir)
ROI.main()

e = IDL.ENVI()

data = r'G:\IDL_ROI_Field\Site1\ROI\valuepoint.shp'
Vector = e.OpenVector(data)
task_vtoroi = IDL.ENVITask('VectorAttributeToROIs')
task_vtoroi.attribute_name = 'RASTERVALU'
task_vtoroi.input_vector = Vector
task_vtoroi.output_roi_uri = "G:\IDL_ROI_Field\Site1\ROI\Site1_ROI.xml"
task_vtoroi.Execute()